package com.stars.modules.buddy.prodata;import com.stars.network.server.buffer.NewByteBuffer;import com.stars.util.StringUtil;import java.util.HashMap;import java.util.Map;/** * Created by liuyuheng on 2016/8/5. */public class BuddyLineupVo {    private byte lineupId;// '阵法id'    private int armsLv;// '伙伴武装等级,用于不同等级伙伴配置增加属性不同'    private String attribute;// '所加属性'    private String condition;// '开启条件'    /* 内存数据 */    private String firstAttrName;// 第一属性名称    private int reqRoleLv;// 需要角色等级    private int reqVipLv;// 需要vip等级    private Map<String, Integer> attrPointMap = new HashMap<>();// 附加属性名-加成数值(千分比)    public void writeToBuff(NewByteBuffer buff) {        buff.writeInt(armsLv);        buff.writeString(attribute);        buff.writeString(condition);    }    public String getFirstAttrName() {        return firstAttrName;    }    /**     * 根据属性名获得附加属性加成千分比     *     * @param attrName     * @return     */    public int getAttrAddPoint(String attrName) {        return attrPointMap.get(attrName);    }    public Map<String, Integer> getAttrPointMap() {        return attrPointMap;    }    public int getReqRoleLv() {        return reqRoleLv;    }    public int getReqVipLv() {        return reqVipLv;    }    public byte getLineupId() {        return lineupId;    }    public void setLineupId(byte lineupId) {        this.lineupId = lineupId;    }    public int getArmsLv() {        return armsLv;    }    public void setArmsLv(int armsLv) {        this.armsLv = armsLv;    }    public String getAttribute() {        return attribute;    }    public void setAttribute(String attribute) throws Exception {        this.attribute = attribute;        if (StringUtil.isEmpty(attribute) || "0".equals(attribute)) {            return;        }        this.firstAttrName = attribute.split("\\|")[0].split("=")[0];        this.attrPointMap = StringUtil.toMap(attribute, String.class, Integer.class, '=', '|');    }    public String getCondition() {        return condition;    }    public void setCondition(String condition) throws Exception {        this.condition = condition;        if(StringUtil.isEmpty(condition) || "0".equals(condition)) return;        if (!condition.contains("+")) {            throw new IllegalArgumentException("buddylineup表condition字段配置错误");        }        String[] temp = condition.split("\\+");        this.reqRoleLv = Integer.parseInt(temp[0]);        this.reqVipLv = Integer.parseInt(temp[1]);    }}