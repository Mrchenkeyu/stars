package com.stars.modules.buddy.prodata;import com.stars.core.attr.Attribute;import com.stars.modules.skill.SkillManager;import com.stars.modules.skill.prodata.SkillVo;import com.stars.network.server.buffer.NewByteBuffer;import com.stars.util.StringUtil;import java.util.LinkedList;import java.util.List;/** * Created by liuyuheng on 2016/8/5. */public class BuddyinfoVo {    private int buddyId;// '伙伴id'    private String name;// '名字'    private byte special;// '突出属性'    private byte quality;// '品质框'    private int resurgence;// '复活时间(秒)'    private String follow;// '跟随动作'    private String showskill;// '主动技能(用于界面显示)'    private int reqRoleLevel;   // 需要角色等级    private int reqVipLv;       // 需要账号等级    private int reqItem;    // 需要碎片    /* 内存数据 */    private Attribute initAttr;// 初始属性(等级+阶级+武装等级属性)    private int fightScore;// 初始属性计算战力    private List<Integer> skillIdList = new LinkedList<>();    public void writeToBuff(NewByteBuffer buff) {        buff.writeInt(buddyId);        buff.writeString(name);        buff.writeByte(special);        buff.writeByte(quality);        buff.writeInt(fightScore);//        byte size = (byte) (skillIdList == null ? 0 : skillIdList.size());//        buff.writeByte(size);//        if (size == 0)//            return;//        for (int skillId : skillIdList) {//            SkillVo skillVo = SkillManager.getSkillVo(skillId);//            buff.writeInt(skillVo.getSkillid());//            buff.writeString(skillVo.getName());//            buff.writeString(skillVo.getIcon());//            buff.writeString(skillVo.getDescrib());//        }        initAttr.writeToBuffer(buff);    }    public int getBuddyId() {        return buddyId;    }    public void setBuddyId(int buddyId) {        this.buddyId = buddyId;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public byte getSpecial() {        return special;    }    public void setSpecial(byte special) {        this.special = special;    }    public byte getQuality() {        return quality;    }    public void setQuality(byte quality) {        this.quality = quality;    }    public int getResurgence() {        return resurgence;    }    public void setResurgence(int resurgence) {        this.resurgence = resurgence;    }    public String getFollow() {        return follow;    }    public void setFollow(String follow) {        this.follow = follow;    }    public Attribute getInitAttr() {        return initAttr;    }    public void setInitAttr(Attribute initAttr) {        this.initAttr = initAttr;    }    public int getFightScore() {        return fightScore;    }    public void setFightScore(int fightScore) {        this.fightScore = fightScore;    }    public String getShowskill() {        return showskill;    }    public void setShowskill(String showskill) throws Exception {        this.showskill = showskill;        if (StringUtil.isEmpty(showskill) || "0".equals(showskill)) {            return;        }        skillIdList = StringUtil.toArrayList(showskill, Integer.class, '+');        for (int skillId : skillIdList) {            SkillVo skillVo = SkillManager.getSkillVo(skillId);            if (skillVo == null)                throw new IllegalArgumentException("buddyinfo表找不到技能配置skillid=" + skillId);        }    }    public int getReqRoleLevel() {        return reqRoleLevel;    }    public void setReqRoleLevel(int reqRoleLevel) {        this.reqRoleLevel = reqRoleLevel;    }    public int getReqVipLv() {        return reqVipLv;    }    public void setReqVipLv(int reqVipLv) {        this.reqVipLv = reqVipLv;    }    public int getReqItem() {        return reqItem;    }    public void setReqItem(int reqItem) {        this.reqItem = reqItem;    }}