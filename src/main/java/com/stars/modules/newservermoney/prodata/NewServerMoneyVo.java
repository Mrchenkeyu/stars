package com.stars.modules.newservermoney.prodata;import com.stars.modules.data.DataManager;import com.stars.modules.tool.ToolManager;import com.stars.modules.tool.productdata.ItemVo;import com.stars.network.server.buffer.NewByteBuffer;import com.stars.util.StringUtil;import java.util.HashMap;import java.util.Map;/** * Created by liuyuheng on 2017/1/4. */public class NewServerMoneyVo {    private int operateActId;// '活动Id'    private int type;// '撒钱类型'    private int interval;// '间隔时间'    private int playerNum;// '抽取玩家数量'    private int extractTimes;// '抽取次数'    private String startTime;// '开始时间'    private int levelLimit;// '最小等级'    private int emailTemplate;// '奖励邮件id'    private String reward;// '奖励'    /* 内存数据 */    private Map<Integer, Integer> rewardMap = new HashMap<>();    private String rewardNotice = "";// 奖励提示文本    public void writeToBuff(NewByteBuffer buff) {        buff.writeInt(type);// '撒钱类型'        buff.writeInt(interval);// '间隔时间'        buff.writeInt(playerNum);// '抽取玩家数量'        buff.writeInt(extractTimes);// '抽取次数'        buff.writeString(startTime);// '开始时间'        buff.writeString(reward);// '奖励'    }    public Map<Integer, Integer> getRewardMap() {        return rewardMap;    }    public String getRewardNotice() {        return rewardNotice;    }    public int getType() {        return type;    }    public void setType(int type) {        this.type = type;    }    public int getInterval() {        return interval;    }    public void setInterval(int interval) {        this.interval = interval;    }    public int getPlayerNum() {        return playerNum;    }    public void setPlayerNum(int playerNum) {        this.playerNum = playerNum;    }    public int getExtractTimes() {        return extractTimes;    }    public void setExtractTimes(int extractTimes) {        this.extractTimes = extractTimes;    }    public String getStartTime() {        return startTime;    }    public void setStartTime(String startTime) {        this.startTime = startTime;    }    public int getLevelLimit() {        return levelLimit;    }    public void setLevelLimit(int levelLimit) {        this.levelLimit = levelLimit;    }    public int getEmailTemplate() {        return emailTemplate;    }    public void setEmailTemplate(int emailTemplate) {        this.emailTemplate = emailTemplate;    }    public String getReward() {        return reward;    }    public void setReward(String reward) {        this.reward = reward;        if (StringUtil.isEmpty(reward) || "0".equals(reward)) {            return;        }        rewardMap = StringUtil.toMap(reward, Integer.class, Integer.class, '+', ',');        StringBuilder builder = new StringBuilder("");        for (Map.Entry<Integer, Integer> entry : rewardMap.entrySet()) {            ItemVo itemVo = ToolManager.getItemVo(entry.getKey());            if (itemVo == null)                continue;            if (builder.length() > 0) {                builder.append(",");            }            builder.append(DataManager.getGametext(itemVo.getName())).append("*").append(entry.getValue());        }        this.rewardNotice = builder.toString();    }    public int getOperateActId() {        return operateActId;    }    public void setOperateActId(int operateActId) {        this.operateActId = operateActId;    }}