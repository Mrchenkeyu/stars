package com.stars.modules.dungeon.prodata;import com.stars.modules.tool.ToolManager;import com.stars.network.server.buffer.NewByteBuffer;import com.stars.util.StringUtil;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;/** * Created by liuyuheng on 2016/6/21. */public class DungeoninfoVo {	public static final byte STAR_COND_TIME = 1;	public static final byte STAR_COND_HP = 2;    private int dungeonId;// '关卡Id'    private int worldId;// '所属章节'    private byte step;// '关卡序号'    private int stageId;// '场景Id'    private String name;// '关卡名称'    private String mapImage;// '关卡界面背景'    private String originText;//    private byte bossIcon;// '关卡boss标识'    private int enterCount;// '进入次数'    private int reqPower;// '挑战需要体力'    //private byte starType;// 评星类型;1=时间类型,2=杀怪类型    private String starCondition;// 评星条件    private int recommend;// '推荐战力'    private String openCondition;// '开启条件'    private String firstDrop;// '首通奖励'    private String generalDrop;// '界面显示普通奖励'    private String award;// '通关奖励'    private String expCoefficient;// 经验奖励倍率    private String showBoss;// '模型资源名'    private int showBossScale;// '模型缩放比例千分数'    private String stepLocation;// '显示位置'    private String shortcut;// '提升途径'    private String specialaward;// '奖励特效标识'    private int teamtype;    private String firstshowdrop;//首通展示    /* 内存数据 */    private int passDropId;// 通关奖励掉落组Id    private int sweepDropId;// 扫荡奖励掉落组Id    private Map<Integer, Integer> firstPasssReward = new HashMap<>();// 首通奖励    private int passExpCoef;// 通关经验系数    private int sweepExpCoef;// 扫荡经验系数    // 星级条件 star-condition <条件类型，条件参数> 条件类型0无评星，1时间，2血量    private List<List<Integer>> starConList = new ArrayList<List<Integer>>();    private Map<Integer, Integer> enterCostMap = new HashMap<>();// 进入/扫荡消耗    private int reqRoleLevel;// 激活所需角色等级    private int reqDungeonId;// 激活所需前置关卡Id    public void writeToBuff(NewByteBuffer buff) {        buff.writeInt(dungeonId);        buff.writeInt(worldId);        buff.writeByte(step);        buff.writeString(name);        buff.writeString(mapImage);        buff.writeString(originText);        buff.writeByte(bossIcon);        buff.writeInt(enterCount);        buff.writeInt(reqPower);        //buff.writeByte(starType);        buff.writeString(starCondition);        buff.writeInt(recommend);        buff.writeString(firstDrop);        buff.writeString(generalDrop);        buff.writeString(openCondition);        buff.writeString(stepLocation);        buff.writeString(shortcut);        buff.writeInt(stageId);        buff.writeString(specialaward);        buff.writeString(firstshowdrop);    }    /**     * 获得星级条件参数     *     * @param star     * @return     *///    public int getConditionByStar(byte star) {//        return starConMap.get(star);//    }    public Map<Integer, Integer> getEnterCostMap() {        return enterCostMap;    }    public Map<Integer, Integer> getFirstPasssReward() {        return firstPasssReward;    }    public int getPassExpCoef() {        return passExpCoef;    }    public int getSweepExpCoef() {        return sweepExpCoef;    }    public int getPassDropId() {        return passDropId;    }    public int getSweepDropId() {        return sweepDropId;    }    public int getWorldId() {        return worldId;    }    public void setWorldId(int worldId) {        this.worldId = worldId;    }    public byte getStep() {        return step;    }    public void setStep(byte step) {        this.step = step;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public String getMapImage() {        return mapImage;    }    public void setMapImage(String mapImage) {        this.mapImage = mapImage;    }    public String getOriginText() {        return originText;    }    public void setOriginText(String originText) {        this.originText = originText;    }    public byte getBossIcon() {        return bossIcon;    }    public void setBossIcon(byte bossIcon) {        this.bossIcon = bossIcon;    }    public int getEnterCount() {        return enterCount;    }    public void setEnterCount(int enterCount) {        this.enterCount = enterCount;    }    public int getReqPower() {        return reqPower;    }    public void setReqPower(int reqPower) {        this.reqPower = reqPower;        enterCostMap.put(ToolManager.VIGOR, reqPower);    }    public String getStarCondition() {        return starCondition;    }    public void setStarCondition(String starCondition) {        this.starCondition = starCondition;        if (StringUtil.isEmpty(starCondition) || "0".equals(starCondition)) {            return;        }        starConList.clear();        String[] temp = starCondition.split("\\|");        for (String sts : temp) {			String[] temp2 = sts.split("\\+");			if (temp2.length >= 2) {				List<Integer> unit = new ArrayList<Integer>();				unit.add(Integer.parseInt(temp2[0]));				unit.add(Integer.parseInt(temp2[1]));				starConList.add(unit);			}		}    }    public List<List<Integer>> getStarConList(){    	return starConList;    }    public int getRecommend() {        return recommend;    }    public void setRecommend(int recommend) {        this.recommend = recommend;    }    public String getOpenCondition() {        return openCondition;    }    public void setOpenCondition(String openCondition) {        this.openCondition = openCondition;        if (StringUtil.isEmpty(openCondition) || "0".equals(openCondition)) {            return;        }        String[] temp = openCondition.split("\\+");        this.reqRoleLevel = Integer.parseInt(temp[0]);        this.reqDungeonId = Integer.parseInt(temp[1]);    }    public String getFirstDrop() {        return firstDrop;    }    public void setFirstDrop(String firstDrop) throws Exception {        this.firstDrop = firstDrop;        if (StringUtil.isEmpty(firstDrop) || "0".equals(firstDrop)) {            return;        }//        firstPasssReward = StringUtil.parseStrToMap(firstDrop, "=", HashMap.class);        firstPasssReward = StringUtil.toMap(firstDrop, Integer.class, Integer.class, '=', '|');    }    public String getGeneralDrop() {        return generalDrop;    }    public void setGeneralDrop(String generalDrop) {        this.generalDrop = generalDrop;    }    public String getAward() {        return award;    }    public void setAward(String award) {        this.award = award;        if (StringUtil.isEmpty(award) || "0".equals(award)) {            return;        }        String[] temp = award.split("\\+");        passDropId = Integer.parseInt(temp[0]);        sweepDropId = Integer.parseInt(temp[1]);    }    public String getExpCoefficient() {        return expCoefficient;    }    public void setExpCoefficient(String expCoefficient) {        this.expCoefficient = expCoefficient;        if (StringUtil.isEmpty(expCoefficient) || "0".equals(expCoefficient)) {            return;        }        String[] temp = expCoefficient.split("\\+");        passExpCoef = Integer.parseInt(temp[0]);        sweepExpCoef = Integer.parseInt(temp[1]);    }    public String getShowBoss() {        return showBoss;    }    public void setShowBoss(String showBoss) {    	this.showBoss = showBoss;    }    public int getShowBossScale() {        return showBossScale;    }    public void setShowBossScale(int showBossScale) {    	this.showBossScale = showBossScale;    }    public int getTeamtype() {        return teamtype;    }    public void setTeamtype(int value) {    	this.teamtype = value;    }//    public byte getStarType() {//        return starType;//    }////    public void setStarType(byte starType) {//        this.starType = starType;//    }    public int getReqRoleLevel() {        return reqRoleLevel;    }    public int getReqDungeonId() {        return reqDungeonId;    }    public int getDungeonId() {        return dungeonId;    }    public void setDungeonId(int dungeonId) {        this.dungeonId = dungeonId;    }    public int getStageId() {        return stageId;    }    public void setStageId(int stageId) {        this.stageId = stageId;    }    public String getStepLocation() {        return stepLocation;    }    public void setStepLocation(String stepLocation) {        this.stepLocation = stepLocation;    }    public String getShortcut() {        return shortcut;    }    public void setShortcut(String shortcut) {        this.shortcut = shortcut;    }    public String getSpecialaward() {        return specialaward;    }    public void setSpecialaward(String specialaward) {        this.specialaward = specialaward;    }    public String getFirstshowdrop() {        return firstshowdrop;    }    public void setFirstshowdrop(String firstshowdrop) {        this.firstshowdrop = firstshowdrop;    }}