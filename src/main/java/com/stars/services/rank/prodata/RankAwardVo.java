package com.stars.services.rank.prodata;import com.stars.services.rank.RankConstant;import com.stars.util.StringUtil;import java.text.ParseException;import java.text.SimpleDateFormat;import java.util.HashMap;import java.util.Map;/** * Created by liuyuheng on 2016/8/22. */public class RankAwardVo {    private int rankId;// '排行榜id'    private String section;// '名次段'    private String award;// '奖励'    private String moment;// '发放时间点(1=每日发放;2=每周发放;3=指定日期(格式3+2016-08-22 15:40))'    private int email;// '发放奖励的邮件模板id'    private String companyAward;// '团队奖励'    /* 内存数据 */    private int[] sections;// 低名次,高名次    private Map<Integer, Integer> rewardMap;// 奖励map    private Map<Byte, Map<Integer, Integer>> allRewardMap;// 所有奖励集合, <奖励类型(个人,集体),<itemid， number>>    private byte rewardType;// 发奖类型    private long appointTime;// 指定发奖时间戳    public boolean isInSectionRange(int rank){        return rank>=sections[0] && rank<=sections[1];    }    public int[] getSections() {        return sections;    }    public Map<Integer, Integer> getRewardMap() {        return rewardMap;    }    public byte getRewardType() {        return rewardType;    }    public long getAppointTime() {        return appointTime;    }    public int getRankId() {        return rankId;    }    public void setRankId(int rankId) {        this.rankId = rankId;    }    public String getSection() {        return section;    }    public void setSection(String section) throws Exception {        this.section = section;        if (StringUtil.isEmpty(section) || "0".equals(section)) {            throw new IllegalArgumentException("rankawardvo表section字段数据错误,请检查表");        }//        sections = StringUtil.parseIntList(section, "\\+");        sections = StringUtil.toArray(section, int[].class, '+');        if (sections[0] > sections[1])            throw new IllegalArgumentException("rankawardvo表section字段数据错误,请检查表");    }    public String getAward() {        return award;    }    public void setAward(String award) throws Exception {        this.award = award;        if (StringUtil.isEmpty(award) || "0".equals(award)) {            rewardMap = new HashMap<>();            return;        }//        rewardMap = StringUtil.parseIntegerMap(award, "\\|", HashMap.class);        rewardMap = StringUtil.toMap(award, Integer.class, Integer.class, '=', '|');        if (allRewardMap == null)            allRewardMap = new HashMap<>();//        allRewardMap.put(RankConstant.REWARD_MAIL_TYPE_PERSON, StringUtil.parseIntegerMap(award, "\\|", HashMap.class));        allRewardMap.put(RankConstant.REWARD_MAIL_TYPE_PERSON,                StringUtil.toMap(award, Integer.class, Integer.class, '=', '|'));    }    public String getMoment() {        return moment;    }    public void setMoment(String moment) throws ParseException {        this.moment = moment;        if (StringUtil.isEmpty(moment)) {            throw new IllegalArgumentException("rankawardvo表moment字段数据错误,请检查表");        }        if (!moment.contains("+")) {            rewardType = Byte.parseByte(moment);        } else {            String[] temp = moment.split("\\+");            rewardType = Byte.parseByte(temp[0]);            appointTime = new SimpleDateFormat("yyyy-MM-dd HH:mm").parse(temp[1]).getTime();        }    }    public int getEmail() {        return email;    }    public void setEmail(int email) {        this.email = email;    }    public String getCompanyAward() {        return companyAward;    }    public void setCompanyAward(String companyAward) throws Exception {        this.companyAward = companyAward;        if (StringUtil.isEmpty(companyAward) || "0".equals(companyAward)) {            return;        }        if (allRewardMap == null)            allRewardMap = new HashMap<>();//        allRewardMap.put(RankConstant.REWARD_MAIL_TYPE_COMPANY,//                StringUtil.parseIntegerMap(companyAward, "\\|", HashMap.class));        allRewardMap.put(RankConstant.REWARD_MAIL_TYPE_COMPANY,                StringUtil.toMap(companyAward, Integer.class, Integer.class, '=', '|'));    }}